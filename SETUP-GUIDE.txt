===============================================================
üöÄ VOICE AGENT V2 - COMPLETE SETUP GUIDE
===============================================================

üìã CHANGES IN THIS VERSION:
---------------------------
‚úÖ Fixed phone call endpoint (404 error resolved)
‚úÖ Removed scenario_type field - now using ONE agent with combined prompt
‚úÖ Added web call + phone call toggle in Test Call page
‚úÖ Comprehensive default prompt handling both scenarios
‚úÖ Email confirmation support for Supabase Auth
‚úÖ Proper logging throughout

===============================================================
STEP 1: SUPABASE SETUP
===============================================================

1.1 - Create Database Tables
------------------------------
   Go to: Supabase Dashboard ‚Üí SQL Editor
   Copy and paste ALL content from: SQL-TABLES.txt
   Click "Run"

1.2 - Configure Email Authentication
-------------------------------------
   OPTION A (Development - Quick): Disable Email Confirmation
   
   Go to: Authentication ‚Üí Providers ‚Üí Email
   Toggle OFF: "Confirm email"
   Click: "Save"
   
   ‚úÖ Users can register and login immediately
   ‚ùå Less secure (dev only)

   OPTION B (Production - Recommended): Keep Email Confirmation
   
   Keep it enabled - the app handles it properly!
   ‚úÖ More secure
   ‚úÖ Production ready

1.3 - Get Your API Keys
-----------------------
   Go to: Project Settings ‚Üí API
   
   Copy:
   - Project URL ‚Üí SUPABASE_URL
   - anon public key ‚Üí SUPABASE_KEY
   - service_role key ‚Üí SUPABASE_SERVICE_KEY (‚ö†Ô∏è Keep this secret!)

===============================================================
STEP 2: RETELL AI SETUP
===============================================================

2.1 - Get API Key
-----------------
   Go to: https://retellai.com/dashboard
   Navigate to: API Keys
   Copy your API key ‚Üí RETELL_API_KEY

===============================================================
STEP 3: ENVIRONMENT SETUP
===============================================================

3.1 - Create .env File
----------------------
   In voice-agent-v2/ folder, create a file named: .env
   
   Copy from env.example and fill in your values:
   
   SUPABASE_URL=https://xxxxx.supabase.co
   SUPABASE_KEY=your_anon_key_here
   SUPABASE_SERVICE_KEY=your_service_role_key_here
   RETELL_API_KEY=your_retell_api_key_here

3.2 - Install Backend Dependencies
-----------------------------------
   cd voice-agent-v2
   ../venv/bin/pip install -r backend/requirements.txt

3.3 - Install Frontend Dependencies
------------------------------------
   cd frontend
   npm install
   # OR
   bun install

===============================================================
STEP 4: RUN THE APPLICATION
===============================================================

4.1 - Start Backend
-------------------
   Terminal 1:
   cd voice-agent-v2
   ./backend/run.sh
   
   ‚úÖ You should see: "Voice Agent API starting up..."
   ‚úÖ Server running on: http://localhost:8000

4.2 - Start Frontend
--------------------
   Terminal 2:
   cd voice-agent-v2/frontend
   npm run dev
   # OR
   bun run dev
   
   ‚úÖ Frontend running on: http://localhost:5173

===============================================================
STEP 5: TEST THE APPLICATION
===============================================================

5.1 - Register/Login
--------------------
   1. Open: http://localhost:5173
   2. Click "Create Account"
   3. Fill in details
   4. If email confirmation enabled: check your email
   5. Login with your credentials

5.2 - Create an Agent
---------------------
   1. Navigate to: "Agents" page
   2. Click: "Create New Agent"
   3. Enter name: "Dispatch Agent"
   4. The prompt is pre-filled with a comprehensive prompt that handles:
      - Normal driver check-ins
      - Emergency situations
   5. Click: "Create Agent"
   
   ‚è≥ This creates both LLM config and agent in Retell AI

5.3 - Test Web Call (Recommended for Testing)
----------------------------------------------
   1. Navigate to: "Test Call" page
   2. Select: "Web Call (Test Now)"
   3. Fill in:
      - Select your agent
      - Driver Name: "John Smith"
      - Load Number: "LOAD-12345"
   4. Click: "Start Web Call"
   5. üé§ Speak to test!
   6. Try both scenarios:
      - Normal: "I'm about 2 hours from delivery"
      - Emergency: "I just had a tire blowout"

5.4 - Test Phone Call (If you have a phone number)
---------------------------------------------------
   1. Navigate to: "Test Call" page
   2. Select: "Phone Call"
   3. Fill in all fields including phone number
   4. Click: "Initiate Phone Call"
   5. You'll receive a call on that number

5.5 - View Call History
------------------------
   1. Navigate to: "Calls" page
   2. See all your test calls
   3. Click on a call to see transcript and analysis

===============================================================
üêõ TROUBLESHOOTING
===============================================================

Issue: Backend won't start - "ValidationError"
Solution: Make sure .env file exists with all 4 variables

Issue: "Registration failed"
Solution: Check backend logs (terminal where backend is running)

Issue: "404 Not Found" from Retell
Solution: Fixed! Make sure you pulled latest code

Issue: Web call not working
Solution: Make sure retell-client-js-sdk is installed in frontend

Issue: Can't login after registration
Solution: Check if email confirmation is enabled in Supabase

===============================================================
üìù NOTES
===============================================================

‚úÖ Single agent now handles BOTH scenarios (check-in + emergency)
‚úÖ Web calls work without phone numbers (great for testing)
‚úÖ Phone calls require valid phone numbers
‚úÖ All calls are recorded in the database
‚úÖ Comprehensive logging for debugging
‚úÖ Email confirmation properly handled

===============================================================
üéØ WHAT'S DIFFERENT FROM OLD VERSION
===============================================================

‚ùå REMOVED:
   - scenario_type field (was causing confusion)
   - Separate agents for different scenarios
   
‚úÖ ADDED:
   - Combined prompt handling both scenarios
   - Web/Phone call toggle
   - Better error logging
   - Email confirmation flow
   - Fixed phone call endpoint
   - Cleaner agent creation

===============================================================

Need help? Check the logs in your terminal windows!
===============================================================
